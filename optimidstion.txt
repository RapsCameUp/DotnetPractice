private void UpdateParticle(Particle particle, Label particleLabel)
{
    for (int i = 0; i < passwordLength; i++)
    {
        if (random.NextDouble() < 0.5)
        {
            particle.Position[i] = particle.BestPosition[i];
        }
        else
        {
            particle.Position[i] = GetRandomCharacter();
        }
    }

    particle.Fitness = ComputeFitness(particle.Position);
    if (particle.Fitness > particle.BestFitness)
    {
        particle.BestFitness = particle.Fitness;
        particle.BestPosition = (char[])particle.Position.Clone();
    }

    // Safely update the UI by invoking on the main thread
    form.Invoke((Action)(() =>
    {
        // Update particle label's text and background color safely
        particleLabel.Text = new string(particle.Position);
        particleLabel.BackColor = Color.FromArgb((int)(particle.Fitness * 255), 255, 255);
        particleLabel.ForeColor = particle.Fitness == 1.0 ? Color.Green : Color.Black;
    }));
}

public void Run()
{
    var swarm = InitializeSwarm();
    Particle globalBestParticle = null;

    for (int iteration = 0; iteration < maxIterations; iteration++)
    {
        for (int i = 0; i < swarmSize; i++)
        {
            var particle = swarm[i];
            var particleLabel = particleLabels[i];

            // Update the particle and its label safely
            UpdateParticle(particle, particleLabel);

            // Update global best
            if (globalBestParticle == null || particle.BestFitness > globalBestParticle.BestFitness)
            {
                globalBestParticle = particle;
            }
        }

        // Update the form's title safely
        form.Invoke((Action)(() =>
        {
            form.Text = $"Iteration {iteration + 1}: Best Guess = {new string(globalBestParticle.BestPosition)}, Fitness = {globalBestParticle.BestFitness * 100}%";
        }));

        // Sleep for a moment to simulate real-time visualization
        System.Threading.Thread.Sleep(500);

        if (globalBestParticle.BestFitness == 1.0)
        {
            form.Invoke((Action)(() =>
            {
                MessageBox.Show($"Password '{targetPassword}' guessed in {iteration + 1} iterations!");
            }));
            break;
        }
    }
}
